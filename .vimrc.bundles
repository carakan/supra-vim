" Environment {
set runtimepath+=~/.vim/bundle/repos/github.com/Shougo/dein.vim

if dein#load_state(expand('~/.vim/bundle'))
    call dein#begin(expand('~/.vim/bundle'))
    call dein#add('Shougo/dein.vim')

    call dein#add('tomtom/tlib_vim')

    " In your .vimrc.before.local file
    " list only the plugin groups you will use
    if !exists('g:spf13_bundle_groups')
        let g:spf13_bundle_groups=['general', 'writing', 'neocomplete', 'programming', 'php', 'ruby', 'python', 'javascript', 'html', 'misc',]
    endif

    " To override all the included bundles, add the following to your
    " .vimrc.bundles.local file:
    "   let g:override_spf13_bundles = 1
    if !exists("g:override_spf13_bundles")
    " General {
        if count(g:spf13_bundle_groups, 'general')
            call dein#add('scrooloose/nerdtree')
            call dein#add('tpope/vim-surround')
            call dein#add('tpope/vim-repeat')
            call dein#add('rhysd/conflict-marker.vim')
            call dein#add('jiangmiao/auto-pairs')
            call dein#add('terryma/vim-multiple-cursors')
            call dein#add('r901042004/matchit.zip')
            call dein#add('vim-airline/vim-airline')
            call dein#add('vim-airline/vim-airline-themes')
            call dein#add('bling/vim-bufferline')
            call dein#add('easymotion/vim-easymotion')
            call dein#add('jistr/vim-nerdtree-tabs')
            call dein#add('mbbill/undotree')
            call dein#add('nathanaelkane/vim-indent-guides')
            call dein#add('mhinz/vim-signify')
            call dein#add('tpope/vim-abolish.git')
            call dein#add('osyo-manga/vim-over')
            call dein#add('kana/vim-textobj-user')
            call dein#add('kana/vim-textobj-indent')
            call dein#add('jasonlong/vim-textobj-css')
            call dein#add('kana/vim-textobj-function')
            call dein#add('gcmt/wildfire.vim')
            call dein#add('airblade/vim-rooter')
            call dein#add('benizi/vim-automkdir')
        endif
    " }

    " Writing {
        if count(g:spf13_bundle_groups, 'writing')
            call dein#add('reedes/vim-litecorrect')
            call dein#add('reedes/vim-textobj-sentence')
            call dein#add('reedes/vim-textobj-quote')
            call dein#add('reedes/vim-wordy')
        endif
    " }

    " General Programming {
        if count(g:spf13_bundle_groups, 'programming')
            call dein#add('tpope/vim-fugitive', { 'on_cmd': [ 'Git', 'Gstatus', 'Gwrite', 'Glog', 'Gcommit', 'Gblame', 'Ggrep', 'Gdiff'] })
            call dein#add('mattn/webapi-vim')
            call dein#add('mattn/gist-vim')
            call dein#add('scrooloose/nerdcommenter')
            call dein#add('tpope/vim-commentary')
            call dein#add('godlygeek/tabular')
            call dein#add('tpope/vim-endwise')
            call dein#add('christoomey/vim-tmux-navigator')
            call dein#add('google/vim-searchindex')
            call dein#add('ludovicchabant/vim-gutentags')
            set statusline+=%{gutentags#statusline()}
        endif
    " }

    " Snippets & AutoComplete {
        call dein#add('Shougo/deoplete.nvim')
        call dein#add('SirVer/ultisnips')
        call dein#add('honza/vim-snippets')
    " }

    " PHP {
        if count(g:spf13_bundle_groups, 'php')
            call dein#add('spf13/PIV')
            call dein#add('arnaud-lb/vim-php-namespace')
            call dein#add('beyondwords/vim-twig')
        endif
    " }

    " Python {
        if count(g:spf13_bundle_groups, 'python')
            call dein#add('klen/python-mode')
            call dein#add('yssource/python.vim')
            call dein#add('python_match.vim')
            call dein#add('pythoncomplete')
        endif
    " }

    " Javascript {
        if count(g:spf13_bundle_groups, 'javascript')
            call dein#add('pangloss/vim-javascript', {'on_ft': 'javascript'})
            call dein#add('elzr/vim-json', {'on_ft': ['json', 'javascript']})
            call dein#add('carlitux/deoplete-ternjs', {'on_ft': 'javascript', 'build': 'npm install -g tern'})
            let g:deoplete#sources#ternjs#types = 1
            let g:deoplete#sources#ternjs#docs = 1
            let g:deoplete#sources#ternjs#filetypes = [
                \ 'jsx',
                \ 'javascript.jsx',
                \ 'vue',
                \ 'javascript',
                \ 'html.handlebars'
                \ ]
            call dein#add('HerringtonDarkholme/yats.vim', {'on_ft': 'typescript'})
            call dein#add('mhartington/nvim-typescript', {'on_ft': 'typescript', 'build': './install'})
            " this is a requeriment of tsuquyomi
            call dein#add('Shougo/vimproc.vim', {'on_ft': 'typescript', 'build': 'make'})
            call dein#add('Quramy/tsuquyomi', {'on_ft': 'typescript'})
        endif
    " }

    " Scala {
        if count(g:spf13_bundle_groups, 'scala')
            call dein#add('derekwyatt/vim-scala')
            call dein#add('derekwyatt/vim-sbt')
            call dein#add('xptemplate')
        endif
    " }

    " Elixir {
        if count(g:spf13_bundle_groups, 'elixir')
            call dein#add('elixir-editors/vim-elixir', {'on_ft': 'elixir'})
            call dein#add('slashmili/alchemist.vim', {'on_ft': 'elixir'})
        endif
    " }

    " HTML {
        if count(g:spf13_bundle_groups, 'html')
            call dein#add('othree/html5.vim', {'on_ft':['css','scss', 'html', 'xml']})
            call dein#add('hail2u/vim-css3-syntax', {'on_ft':['css','scss']})
            call dein#add('gorodinskiy/vim-coloresque', {'on_ft':['css','scss', 'html']})
            call dein#add('tpope/vim-haml', {'on_ft': 'haml'})
            call dein#add('mattn/emmet-vim', {'on_ft':['css','scss', 'html']})
            " call dein#add('carakan/deoplete-emoji')
        endif
    " }

    " Ruby {
        if count(g:spf13_bundle_groups, 'ruby')
            call dein#add('vim-ruby/vim-ruby')
            call dein#add('tpope/vim-rails')
            let g:rubycomplete_buffer_loading = 1
            let g:rubycomplete_classes_in_global = 1
            let g:rubycomplete_rails = 1
        endif
    " }
    endif

    " Use fork bundles config if available {
        if filereadable(expand("~/.vimrc.bundles.fork"))
            source ~/.vimrc.bundles.fork
        endif
    " }

    " Use local bundles config if available {
        if filereadable(expand("~/.vimrc.bundles.local"))
            source ~/.vimrc.bundles.local
        endif
    " }

    call dein#end()
    call dein#save_state()
endif

filetype plugin indent on
syntax on
